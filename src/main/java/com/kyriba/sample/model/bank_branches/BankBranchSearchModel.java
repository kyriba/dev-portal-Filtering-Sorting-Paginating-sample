/*
 * Bank branches
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.kyriba.sample.model.bank_branches;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.kyriba.sample.model.ReferenceModel;
import com.kyriba.sample.model.UserZones;

import java.util.Objects;
import java.util.UUID;

/**
 * Bank branch
 */
@ApiModel(description = "Bank branch")

public class BankBranchSearchModel {
  @SerializedName("uuid")
  private UUID uuid = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("interfaceCode")
  private String interfaceCode = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("bank")
  private ReferenceModel bank = null;

  @SerializedName("accountLocation")
  private String accountLocation = null;

  @SerializedName("bic")
  private String bic = null;

  @SerializedName("idCode")
  private String idCode = null;

  @SerializedName("address")
  private AddressWithoutHomepageModel address = null;

  @SerializedName("contact")
  private String contact = null;

  @SerializedName("timeZone")
  private String timeZone = null;

  @SerializedName("cutOffTime")
  private String cutOffTime = null;

  @SerializedName("responderCode")
  private String responderCode = null;

  @SerializedName("serviceName")
  private String serviceName = null;

  @SerializedName("userZones")
  private UserZones userZones = null;

  @SerializedName("attachments")
  private Boolean attachments = null;

  @SerializedName("lastUpdateDate")
  private String lastUpdateDate = null;

  public BankBranchSearchModel uuid(UUID uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Unique internal identifier that represents the bank branch.
   * @return uuid
  **/
  @ApiModelProperty(example = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx", required = true, value = "Unique internal identifier that represents the bank branch.")
  public UUID getUuid() {
    return uuid;
  }

  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }

  public BankBranchSearchModel code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Bank branch&#39;s code.
   * @return code
  **/
  @ApiModelProperty(example = "CODE01", required = true, value = "Bank branch's code.")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public BankBranchSearchModel interfaceCode(String interfaceCode) {
    this.interfaceCode = interfaceCode;
    return this;
  }

   /**
   * Bank branch&#39;s interface code.
   * @return interfaceCode
  **/
  @ApiModelProperty(example = "CODE01", required = true, value = "Bank branch's interface code.")
  public String getInterfaceCode() {
    return interfaceCode;
  }

  public void setInterfaceCode(String interfaceCode) {
    this.interfaceCode = interfaceCode;
  }

  public BankBranchSearchModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Bank branch&#39;s description.
   * @return description
  **/
  @ApiModelProperty(example = "Bank branch's description.", value = "Bank branch's description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public BankBranchSearchModel bank(ReferenceModel bank) {
    this.bank = bank;
    return this;
  }

   /**
   * Bank.
   * @return bank
  **/
  @ApiModelProperty(required = true, value = "Bank.")
  public ReferenceModel getBank() {
    return bank;
  }

  public void setBank(ReferenceModel bank) {
    this.bank = bank;
  }

  public BankBranchSearchModel accountLocation(String accountLocation) {
    this.accountLocation = accountLocation;
    return this;
  }

   /**
   * Account location.
   * @return accountLocation
  **/
  @ApiModelProperty(example = "France", value = "Account location.")
  public String getAccountLocation() {
    return accountLocation;
  }

  public void setAccountLocation(String accountLocation) {
    this.accountLocation = accountLocation;
  }

  public BankBranchSearchModel bic(String bic) {
    this.bic = bic;
    return this;
  }

   /**
   * BIC value.
   * @return bic
  **/
  @ApiModelProperty(example = "BATMFRXX", value = "BIC value.")
  public String getBic() {
    return bic;
  }

  public void setBic(String bic) {
    this.bic = bic;
  }

  public BankBranchSearchModel idCode(String idCode) {
    this.idCode = idCode;
    return this;
  }

   /**
   * Corporate ID code.
   * @return idCode
  **/
  @ApiModelProperty(example = "Corp.BB-FR1", value = "Corporate ID code.")
  public String getIdCode() {
    return idCode;
  }

  public void setIdCode(String idCode) {
    this.idCode = idCode;
  }

  public BankBranchSearchModel address(AddressWithoutHomepageModel address) {
    this.address = address;
    return this;
  }

   /**
   * Bank branch&#39;s address.
   * @return address
  **/
  @ApiModelProperty(value = "Bank branch's address.")
  public AddressWithoutHomepageModel getAddress() {
    return address;
  }

  public void setAddress(AddressWithoutHomepageModel address) {
    this.address = address;
  }

  public BankBranchSearchModel contact(String contact) {
    this.contact = contact;
    return this;
  }

   /**
   * Bank branch&#39;s contact name.
   * @return contact
  **/
  @ApiModelProperty(example = "John Doe", value = "Bank branch's contact name.")
  public String getContact() {
    return contact;
  }

  public void setContact(String contact) {
    this.contact = contact;
  }

  public BankBranchSearchModel timeZone(String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Bank branch&#39;s time zone.
   * @return timeZone
  **/
  @ApiModelProperty(required = true, value = "Bank branch's time zone.")
  public String getTimeZone() {
    return timeZone;
  }

  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }

  public BankBranchSearchModel cutOffTime(String cutOffTime) {
    this.cutOffTime = cutOffTime;
    return this;
  }

   /**
   * Bank branch&#39;s intraday connectivity cut-off time.
   * @return cutOffTime
  **/
  @ApiModelProperty(example = "20:00:00", value = "Bank branch's intraday connectivity cut-off time.")
  public String getCutOffTime() {
    return cutOffTime;
  }

  public void setCutOffTime(String cutOffTime) {
    this.cutOffTime = cutOffTime;
  }

  public BankBranchSearchModel responderCode(String responderCode) {
    this.responderCode = responderCode;
    return this;
  }

   /**
   * Bank branch&#39;s swiftnet responder code.
   * @return responderCode
  **/
  @ApiModelProperty(value = "Bank branch's swiftnet responder code.")
  public String getResponderCode() {
    return responderCode;
  }

  public void setResponderCode(String responderCode) {
    this.responderCode = responderCode;
  }

  public BankBranchSearchModel serviceName(String serviceName) {
    this.serviceName = serviceName;
    return this;
  }

   /**
   * Bank branch&#39;s swiftnet service name.
   * @return serviceName
  **/
  @ApiModelProperty(value = "Bank branch's swiftnet service name.")
  public String getServiceName() {
    return serviceName;
  }

  public void setServiceName(String serviceName) {
    this.serviceName = serviceName;
  }

  public BankBranchSearchModel userZones(UserZones userZones) {
    this.userZones = userZones;
    return this;
  }

   /**
   * User zones of the bank branch.
   * @return userZones
  **/
  @ApiModelProperty(value = "User zones of the bank branch.")
  public UserZones getUserZones() {
    return userZones;
  }

  public void setUserZones(UserZones userZones) {
    this.userZones = userZones;
  }

  public BankBranchSearchModel attachments(Boolean attachments) {
    this.attachments = attachments;
    return this;
  }

   /**
   * Flag to select bank branches with Attachments (true) or without Attachments info (false).
   * @return attachments
  **/
  @ApiModelProperty(example = "true", value = "Flag to select bank branches with Attachments (true) or without Attachments info (false).")
  public Boolean isAttachments() {
    return attachments;
  }

  public void setAttachments(Boolean attachments) {
    this.attachments = attachments;
  }

  public BankBranchSearchModel lastUpdateDate(String lastUpdateDate) {
    this.lastUpdateDate = lastUpdateDate;
    return this;
  }

   /**
   * Bank branch&#39;s last update date.
   * @return lastUpdateDate
  **/
  @ApiModelProperty(example = "2019-05-20", value = "Bank branch's last update date.")
  public String getLastUpdateDate() {
    return lastUpdateDate;
  }

  public void setLastUpdateDate(String lastUpdateDate) {
    this.lastUpdateDate = lastUpdateDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BankBranchSearchModel bankBranchSearchModel = (BankBranchSearchModel) o;
    return Objects.equals(this.uuid, bankBranchSearchModel.uuid) &&
        Objects.equals(this.code, bankBranchSearchModel.code) &&
        Objects.equals(this.interfaceCode, bankBranchSearchModel.interfaceCode) &&
        Objects.equals(this.description, bankBranchSearchModel.description) &&
        Objects.equals(this.bank, bankBranchSearchModel.bank) &&
        Objects.equals(this.accountLocation, bankBranchSearchModel.accountLocation) &&
        Objects.equals(this.bic, bankBranchSearchModel.bic) &&
        Objects.equals(this.idCode, bankBranchSearchModel.idCode) &&
        Objects.equals(this.address, bankBranchSearchModel.address) &&
        Objects.equals(this.contact, bankBranchSearchModel.contact) &&
        Objects.equals(this.timeZone, bankBranchSearchModel.timeZone) &&
        Objects.equals(this.cutOffTime, bankBranchSearchModel.cutOffTime) &&
        Objects.equals(this.responderCode, bankBranchSearchModel.responderCode) &&
        Objects.equals(this.serviceName, bankBranchSearchModel.serviceName) &&
        Objects.equals(this.userZones, bankBranchSearchModel.userZones) &&
        Objects.equals(this.attachments, bankBranchSearchModel.attachments) &&
        Objects.equals(this.lastUpdateDate, bankBranchSearchModel.lastUpdateDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, code, interfaceCode, description, bank, accountLocation, bic, idCode, address, contact, timeZone, cutOffTime, responderCode, serviceName, userZones, attachments, lastUpdateDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BankBranchSearchModel {\n");

    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    interfaceCode: ").append(toIndentedString(interfaceCode)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    bank: ").append(toIndentedString(bank)).append("\n");
    sb.append("    accountLocation: ").append(toIndentedString(accountLocation)).append("\n");
    sb.append("    bic: ").append(toIndentedString(bic)).append("\n");
    sb.append("    idCode: ").append(toIndentedString(idCode)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    cutOffTime: ").append(toIndentedString(cutOffTime)).append("\n");
    sb.append("    responderCode: ").append(toIndentedString(responderCode)).append("\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    userZones: ").append(toIndentedString(userZones)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    lastUpdateDate: ").append(toIndentedString(lastUpdateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

