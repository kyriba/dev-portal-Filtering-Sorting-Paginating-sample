/*
 * Accounts
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.kyriba.sample.model.accounts;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.kyriba.sample.model.OtherIdentifierCommonModel;
import com.kyriba.sample.model.ReferenceModel;

/**
 * Account correspondent.
 */
@ApiModel(description = "Account correspondent.")
public class AccountCorrespondent {
  @SerializedName("oneTime")
  private Boolean oneTime = null;

  @SerializedName("correspondentDescription")
  private String correspondentDescription = null;

  @SerializedName("correspondentBIC")
  private String correspondentBIC = null;

  @SerializedName("country")
  private ReferenceModel country = null;

  @SerializedName("correspondentOtherIdentifier")
  private OtherIdentifierCommonModel correspondentOtherIdentifier = null;

  @SerializedName("account")
  private String account = null;

  public AccountCorrespondent oneTime(Boolean oneTime) {
    this.oneTime = oneTime;
    return this;
  }

   /**
   * Flag to show if the account has One-time correspondent (true) or no (false).
   * @return oneTime
  **/
  @ApiModelProperty(example = "false", value = "Flag to show if the account has One-time correspondent (true) or no (false).")
  public Boolean isOneTime() {
    return oneTime;
  }

  public void setOneTime(Boolean oneTime) {
    this.oneTime = oneTime;
  }

  public AccountCorrespondent correspondentDescription(String correspondentDescription) {
    this.correspondentDescription = correspondentDescription;
    return this;
  }

   /**
   * One-time correspondent description.
   * @return correspondentDescription
  **/
  @ApiModelProperty(example = "One-time correspondent description", value = "One-time correspondent description.")
  public String getCorrespondentDescription() {
    return correspondentDescription;
  }

  public void setCorrespondentDescription(String correspondentDescription) {
    this.correspondentDescription = correspondentDescription;
  }

  public AccountCorrespondent correspondentBIC(String correspondentBIC) {
    this.correspondentBIC = correspondentBIC;
    return this;
  }

   /**
   * BIC value of the One-time correspondent.
   * @return correspondentBIC
  **/
  @ApiModelProperty(example = "BATMFRXX", value = "BIC value of the One-time correspondent.")
  public String getCorrespondentBIC() {
    return correspondentBIC;
  }

  public void setCorrespondentBIC(String correspondentBIC) {
    this.correspondentBIC = correspondentBIC;
  }

  public AccountCorrespondent country(ReferenceModel country) {
    this.country = country;
    return this;
  }

   /**
   * Country of the One-time correspondent.
   * @return country
  **/
  @ApiModelProperty(value = "Country of the One-time correspondent.")
  public ReferenceModel getCountry() {
    return country;
  }

  public void setCountry(ReferenceModel country) {
    this.country = country;
  }

  public AccountCorrespondent correspondentOtherIdentifier(OtherIdentifierCommonModel correspondentOtherIdentifier) {
    this.correspondentOtherIdentifier = correspondentOtherIdentifier;
    return this;
  }

   /**
   * Other identifier of the One-time correspondent.
   * @return correspondentOtherIdentifier
  **/
  @ApiModelProperty(value = "Other identifier of the One-time correspondent.")
  public OtherIdentifierCommonModel getCorrespondentOtherIdentifier() {
    return correspondentOtherIdentifier;
  }

  public void setCorrespondentOtherIdentifier(OtherIdentifierCommonModel correspondentOtherIdentifier) {
    this.correspondentOtherIdentifier = correspondentOtherIdentifier;
  }

  public AccountCorrespondent account(String account) {
    this.account = account;
    return this;
  }

   /**
   * Account of the One-time correspondent.
   * @return account
  **/
  @ApiModelProperty(example = "Account", value = "Account of the One-time correspondent.")
  public String getAccount() {
    return account;
  }

  public void setAccount(String account) {
    this.account = account;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountCorrespondent accountCorrespondent = (AccountCorrespondent) o;
    return Objects.equals(this.oneTime, accountCorrespondent.oneTime) &&
        Objects.equals(this.correspondentDescription, accountCorrespondent.correspondentDescription) &&
        Objects.equals(this.correspondentBIC, accountCorrespondent.correspondentBIC) &&
        Objects.equals(this.country, accountCorrespondent.country) &&
        Objects.equals(this.correspondentOtherIdentifier, accountCorrespondent.correspondentOtherIdentifier) &&
        Objects.equals(this.account, accountCorrespondent.account);
  }

  @Override
  public int hashCode() {
    return Objects.hash(oneTime, correspondentDescription, correspondentBIC, country, correspondentOtherIdentifier, account);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountCorrespondent {\n");
    
    sb.append("    oneTime: ").append(toIndentedString(oneTime)).append("\n");
    sb.append("    correspondentDescription: ").append(toIndentedString(correspondentDescription)).append("\n");
    sb.append("    correspondentBIC: ").append(toIndentedString(correspondentBIC)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    correspondentOtherIdentifier: ").append(toIndentedString(correspondentOtherIdentifier)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

